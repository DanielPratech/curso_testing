{
  "stats": {
    "suites": 20,
    "tests": 39,
    "passes": 38,
    "pending": 0,
    "failures": 1,
    "start": "2021-05-29T16:04:58.407Z",
    "end": "2021-05-29T16:04:58.598Z",
    "duration": 191,
    "testsRegistered": 39,
    "passPercent": 97.43589743589743,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "56173edd-210b-42ac-9ec8-3a73aafca12d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c93c0d6-24d4-4f6e-af76-d0c0bbaf308c",
          "title": "Chai-fetch",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\chai-fetch.test.js",
          "file": "\\test\\chai-fetch.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"Chai-fetch\"",
              "fullTitle": "Chai-fetch \"before each\" hook in \"Chai-fetch\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockServer.start(9091);",
              "err": {},
              "uuid": "eb66ac0a-6d24-41c8-98d8-b4e030fca095",
              "parentUUID": "6c93c0d6-24d4-4f6e-af76-d0c0bbaf308c",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Chai-fetch\"",
              "fullTitle": "Chai-fetch \"after each\" hook in \"Chai-fetch\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return mockServer.stop();",
              "err": {},
              "uuid": "e1e608dc-ff6a-4e2a-9358-377b758e66da",
              "parentUUID": "6c93c0d6-24d4-4f6e-af76-d0c0bbaf308c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "39d7ff85-b792-446d-9d20-0868414499d4",
              "title": ".responseText",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\chai-fetch.test.js",
              "file": "\\test\\chai-fetch.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should match responses with matching bodies",
                  "fullTitle": "Chai-fetch .responseText should match responses with matching bodies",
                  "timedOut": false,
                  "duration": 4,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "mockServer.get('/match').thenReply(200, 'matching body').then(function () {\n  return expect(fetch('http://localhost:8080/match')).to.have.responseText('matching body');\n});",
                  "err": {},
                  "uuid": "18bbacce-7350-42c3-9c69-8e15e1eb4340",
                  "parentUUID": "39d7ff85-b792-446d-9d20-0868414499d4",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should not match responses with matching bodies",
                  "fullTitle": "Chai-fetch .responseText should not match responses with matching bodies",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "mockServer.get('/match').thenReply(500, 'matching body').then(function () {\n  return expect(fetch('http://localhost:9091/match')).to.have.status(500);\n});",
                  "err": {},
                  "uuid": "88b09587-0d60-478a-bfeb-8e2ea424f171",
                  "parentUUID": "39d7ff85-b792-446d-9d20-0868414499d4",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "18bbacce-7350-42c3-9c69-8e15e1eb4340",
                "88b09587-0d60-478a-bfeb-8e2ea424f171"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 4,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "bbb205e2-5c60-4dea-b7af-6e1d5923f6bf",
          "title": "set-pruebas-plugin-fs",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\chai-fs.test.js",
          "file": "\\test\\chai-fs.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un directorio\n    entonces la validación isDirectory debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un directorio\n    entonces la validación isDirectory debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var path = './archivos';\nchai.assert.isDirectory(path);",
              "err": {},
              "uuid": "9f3be3f0-e220-48ed-bce2-02fc8552d3f6",
              "parentUUID": "bbb205e2-5c60-4dea-b7af-6e1d5923f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un directorio con archivos\n    entonces la validación notIsEmptyDirectory debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un directorio con archivos\n    entonces la validación notIsEmptyDirectory debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var path = './archivos';\nchai.assert.notIsEmptyDirectory(path);",
              "err": {},
              "uuid": "85031716-748d-4925-897b-0a759b5da727",
              "parentUUID": "bbb205e2-5c60-4dea-b7af-6e1d5923f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un archivo con contenido\n    entonces la validación notIsEmptyFile debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un archivo con contenido\n    entonces la validación notIsEmptyFile debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var path = './archivos/archivo-json.json';\nchai.assert.notIsEmptyFile(path);",
              "err": {},
              "uuid": "698f3ecf-ee2d-4969-a5d3-a7dc1af30d87",
              "parentUUID": "bbb205e2-5c60-4dea-b7af-6e1d5923f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un archivo con un json\n    entonces la validación jsonFile debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un archivo con un json\n    entonces la validación jsonFile debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var path = './archivos/archivo-json2.json';\nchai.assert.jsonFile(path);",
              "err": {},
              "uuid": "7ba9935a-7339-49f4-adfb-fc917aad2478",
              "parentUUID": "bbb205e2-5c60-4dea-b7af-6e1d5923f6bf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un archivo con un json que tiene un esquema definido y el contenido del archivo cumple con dicho esquema\n    entonces la validación jsonSchemaFile debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un archivo con un json que tiene un esquema definido y el contenido del archivo cumple con dicho esquema\n    entonces la validación jsonSchemaFile debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 47,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var esquema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"nombre\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\"nombre\"]\n};\nvar path = './archivos/archivo-json2.json';\nchai.assert.jsonSchemaFile(path, esquema, 'descripción de error');",
              "err": {},
              "uuid": "4d02de90-4cbd-4d9c-90a8-8cd20cf0a73b",
              "parentUUID": "bbb205e2-5c60-4dea-b7af-6e1d5923f6bf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9f3be3f0-e220-48ed-bce2-02fc8552d3f6",
            "85031716-748d-4925-897b-0a759b5da727",
            "698f3ecf-ee2d-4969-a5d3-a7dc1af30d87",
            "7ba9935a-7339-49f4-adfb-fc917aad2478",
            "4d02de90-4cbd-4d9c-90a8-8cd20cf0a73b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 53,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "e15e72a0-0906-4cd0-9182-fe598c38a84d",
          "title": "Calcular la suma de 2 números",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-bdd.js",
          "file": "\\test\\example-bdd.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Se sumarán los valores de 2 + 3 y se espera el valor 5",
              "fullTitle": "Calcular la suma de 2 números Se sumarán los valores de 2 + 3 y se espera el valor 5",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(num1 + num2).to.be.equals(5);",
              "err": {},
              "uuid": "0bbe7622-be18-4f28-9762-d1df2353880a",
              "parentUUID": "e15e72a0-0906-4cd0-9182-fe598c38a84d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0bbe7622-be18-4f28-9762-d1df2353880a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "b77c8237-ea75-4a04-aec1-404930615cdf",
          "title": "Ejemplos de librería chai-bn",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-bn.js",
          "file": "\\test\\example-chai-bn.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "6d1598c3-2a1e-4857-adfd-b85fd1f8bafb",
              "title": "Los números son iguales",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-bn.js",
              "file": "\\test\\example-chai-bn.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Comparando con equal",
                  "fullTitle": "Ejemplos de librería chai-bn Los números son iguales Comparando con equal",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(actual).to.be.a.bignumber.that.equal(expected);",
                  "err": {},
                  "uuid": "8330c1c5-2260-4922-9b9a-eb3009be3051",
                  "parentUUID": "6d1598c3-2a1e-4857-adfd-b85fd1f8bafb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Comparando con equals",
                  "fullTitle": "Ejemplos de librería chai-bn Los números son iguales Comparando con equals",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(actual).to.be.a.bignumber.that.equals(expected);",
                  "err": {},
                  "uuid": "4d4f05b3-ed34-41f2-8c3a-54ea5819d93c",
                  "parentUUID": "6d1598c3-2a1e-4857-adfd-b85fd1f8bafb",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Comparando con eq",
                  "fullTitle": "Ejemplos de librería chai-bn Los números son iguales Comparando con eq",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(actual).to.be.a.bignumber.that.eq(expected);",
                  "err": {},
                  "uuid": "97baa77d-efc3-4508-b496-746c48ca131b",
                  "parentUUID": "6d1598c3-2a1e-4857-adfd-b85fd1f8bafb",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "8330c1c5-2260-4922-9b9a-eb3009be3051",
                "4d4f05b3-ed34-41f2-8c3a-54ea5819d93c",
                "97baa77d-efc3-4508-b496-746c48ca131b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            },
            {
              "uuid": "4ed460e5-97ca-437f-a143-c221fbaf2bd9",
              "title": "Un número es mayor que el otro",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-bn.js",
              "file": "\\test\\example-chai-bn.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Comparando con above",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es mayor que el otro Comparando con above",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(major).to.be.a.bignumber.that.above(minor);",
                  "err": {},
                  "uuid": "a69b899b-7078-4988-b5ad-582c9f8d0fc8",
                  "parentUUID": "4ed460e5-97ca-437f-a143-c221fbaf2bd9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Comparando con gt",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es mayor que el otro Comparando con gt",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(major).to.be.a.bignumber.that.gt(minor);",
                  "err": {},
                  "uuid": "5d302dfc-f8c8-44ea-842c-dfe49c43e4ca",
                  "parentUUID": "4ed460e5-97ca-437f-a143-c221fbaf2bd9",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Comparando con greaterThan",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es mayor que el otro Comparando con greaterThan",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(major).to.be.a.bignumber.that.greaterThan(minor);",
                  "err": {},
                  "uuid": "45d04b18-4839-4686-a111-4e7366e93d25",
                  "parentUUID": "4ed460e5-97ca-437f-a143-c221fbaf2bd9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a69b899b-7078-4988-b5ad-582c9f8d0fc8",
                "5d302dfc-f8c8-44ea-842c-dfe49c43e4ca",
                "45d04b18-4839-4686-a111-4e7366e93d25"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            },
            {
              "uuid": "80a72de2-4308-4be8-8103-a53bc9ea7ef0",
              "title": "Un número es menor que el otro",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-bn.js",
              "file": "\\test\\example-chai-bn.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Comparando con below",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es menor que el otro Comparando con below",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(minor).to.be.a.bignumber.that.below(major);",
                  "err": {},
                  "uuid": "68de5ac3-c0b9-436f-b8d3-6bec80b24f93",
                  "parentUUID": "80a72de2-4308-4be8-8103-a53bc9ea7ef0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Comparando con lt",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es menor que el otro Comparando con lt",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(minor).to.be.a.bignumber.that.lt(major);",
                  "err": {},
                  "uuid": "e5428ece-39b1-4554-ae3a-81f15a717e88",
                  "parentUUID": "80a72de2-4308-4be8-8103-a53bc9ea7ef0",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Comparando con lessThan",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es menor que el otro Comparando con lessThan",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(minor).to.be.a.bignumber.that.lessThan(major);",
                  "err": {},
                  "uuid": "373bb2d4-2742-4d8e-8be1-61c960aa4a40",
                  "parentUUID": "80a72de2-4308-4be8-8103-a53bc9ea7ef0",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "68de5ac3-c0b9-436f-b8d3-6bec80b24f93",
                "e5428ece-39b1-4554-ae3a-81f15a717e88",
                "373bb2d4-2742-4d8e-8be1-61c960aa4a40"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 3,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            },
            {
              "uuid": "07f63e5b-122d-447c-aecc-ab23ab2e3f7c",
              "title": "Un número es mayor o igual que el otro",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-bn.js",
              "file": "\\test\\example-chai-bn.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Comparando con least",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es mayor o igual que el otro Comparando con least",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(minor).to.be.a.bignumber.that.least(minor);",
                  "err": {},
                  "uuid": "71f96304-c013-4a0b-a297-a5dff72d91a3",
                  "parentUUID": "07f63e5b-122d-447c-aecc-ab23ab2e3f7c",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Comparando con gte",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es mayor o igual que el otro Comparando con gte",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(major).to.be.a.bignumber.that.gte(minor);",
                  "err": {},
                  "uuid": "d22ff522-5a18-43f1-b2fc-b6042cc7a3d5",
                  "parentUUID": "07f63e5b-122d-447c-aecc-ab23ab2e3f7c",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "71f96304-c013-4a0b-a297-a5dff72d91a3",
                "d22ff522-5a18-43f1-b2fc-b6042cc7a3d5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            },
            {
              "uuid": "ca6bd131-1e98-4320-8172-f36769cf6955",
              "title": "Un número es menor o igual que el otro",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-bn.js",
              "file": "\\test\\example-chai-bn.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Comparando con most",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es menor o igual que el otro Comparando con most",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(major).to.be.a.bignumber.that.most(major);",
                  "err": {},
                  "uuid": "e6ff3711-badc-402b-a384-3126fd77f19d",
                  "parentUUID": "ca6bd131-1e98-4320-8172-f36769cf6955",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "Comparando con lte",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es menor o igual que el otro Comparando con lte",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(minor).to.be.a.bignumber.that.lte(major);",
                  "err": {},
                  "uuid": "b93af0ed-e0ed-4eb0-8b9e-0cbfb59b5711",
                  "parentUUID": "ca6bd131-1e98-4320-8172-f36769cf6955",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "e6ff3711-badc-402b-a384-3126fd77f19d",
                "b93af0ed-e0ed-4eb0-8b9e-0cbfb59b5711"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            },
            {
              "uuid": "1167434f-247d-4163-8f7d-7db99c84dfc7",
              "title": "Un número es negativo",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-bn.js",
              "file": "\\test\\example-chai-bn.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Comparando con negative",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es negativo Comparando con negative",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(negativeNumber).to.be.a.bignumber.that.negative;",
                  "err": {},
                  "uuid": "d56c7cf6-6f99-4911-aa27-2b7f3153fcd3",
                  "parentUUID": "1167434f-247d-4163-8f7d-7db99c84dfc7",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "d56c7cf6-6f99-4911-aa27-2b7f3153fcd3"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            },
            {
              "uuid": "cef6f190-6a5b-46d0-a02f-66aff86070b2",
              "title": "Un número es igual a cero",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-bn.js",
              "file": "\\test\\example-chai-bn.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Comparando con zero",
                  "fullTitle": "Ejemplos de librería chai-bn Un número es igual a cero Comparando con zero",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "expect(zero).to.be.a.bignumber.that.zero;",
                  "err": {},
                  "uuid": "122cff9d-a34f-4a4e-9d99-e81e45f88ebd",
                  "parentUUID": "cef6f190-6a5b-46d0-a02f-66aff86070b2",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "122cff9d-a34f-4a4e-9d99-e81e45f88ebd"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "9cae73da-5f20-49ad-9244-96bb0701f443",
          "title": "Validando dos objetos con chai-deep",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-chai-deep.js",
          "file": "\\test\\example-chai-deep.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deep",
              "fullTitle": "Validando dos objetos con chai-deep Deep",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(obj1).to.deep.match((0, _sum[\"default\"])(1, 2));",
              "err": {},
              "uuid": "8e5cfa32-b4eb-4e9a-86f6-1c4e93cdd2cb",
              "parentUUID": "9cae73da-5f20-49ad-9244-96bb0701f443",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8e5cfa32-b4eb-4e9a-86f6-1c4e93cdd2cb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "a262fd95-79f6-4422-907e-78c466e4b262",
          "title": "set-pruebas-plugin-fs",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-fs.js",
          "file": "\\test\\example-fs.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un directorio\n    entonces la validación isDirectory debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un directorio\n    entonces la validación isDirectory debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var path = './archivos';\nchai.assert.isDirectory(path);",
              "err": {},
              "uuid": "756b0d18-b354-48f9-a891-bacb00d0566a",
              "parentUUID": "a262fd95-79f6-4422-907e-78c466e4b262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un directorio con archivos\n    entonces la validación notIsEmptyDirectory debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un directorio con archivos\n    entonces la validación notIsEmptyDirectory debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var path = './archivos';\nchai.assert.notIsEmptyDirectory(path);",
              "err": {},
              "uuid": "716a8dac-844e-4aab-82f7-11e6fc19fc42",
              "parentUUID": "a262fd95-79f6-4422-907e-78c466e4b262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un archivo con contenido\n    entonces la validación notIsEmptyFile debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un archivo con contenido\n    entonces la validación notIsEmptyFile debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var path = './archivos/archivo-json.json';\nchai.assert.notIsEmptyFile(path);",
              "err": {},
              "uuid": "51363cc0-5a64-4974-9301-fdb20725f3cd",
              "parentUUID": "a262fd95-79f6-4422-907e-78c466e4b262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un archivo con un json\n    entonces la validación jsonFile debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un archivo con un json\n    entonces la validación jsonFile debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var path = './archivos/archivo-json2.json';\nchai.assert.jsonFile(path);",
              "err": {},
              "uuid": "bdbb723e-154d-48bc-b794-36fef5f6b131",
              "parentUUID": "a262fd95-79f6-4422-907e-78c466e4b262",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dado una ruta en filesystem\n    cuando se tiene un archivo con un json que tiene un esquema definido y el contenido del archivo cumple con dicho esquema\n    entonces la validación jsonSchemaFile debe arrojar un resultado exitoso",
              "fullTitle": "set-pruebas-plugin-fs dado una ruta en filesystem\n    cuando se tiene un archivo con un json que tiene un esquema definido y el contenido del archivo cumple con dicho esquema\n    entonces la validación jsonSchemaFile debe arrojar un resultado exitoso",
              "timedOut": false,
              "duration": 2,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var esquema = {\n  \"type\": \"object\",\n  \"properties\": {\n    \"nombre\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\"nombre\"]\n};\nvar path = './archivos/archivo-json2.json';\nchai.assert.jsonSchemaFile(path, esquema, 'descripción de error');",
              "err": {},
              "uuid": "a340f5dc-e304-459e-bb1f-b8df11be16e7",
              "parentUUID": "a262fd95-79f6-4422-907e-78c466e4b262",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "756b0d18-b354-48f9-a891-bacb00d0566a",
            "716a8dac-844e-4aab-82f7-11e6fc19fc42",
            "51363cc0-5a64-4974-9301-fdb20725f3cd",
            "bdbb723e-154d-48bc-b794-36fef5f6b131",
            "a340f5dc-e304-459e-bb1f-b8df11be16e7"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "77e0b06d-cab5-4b6f-b7d8-ec18233ba65e",
          "title": "El objeto manzana tiene los atributos acordes con el esquema de manzana. El carro no.",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-json-schema.js",
          "file": "\\test\\example-json-schema.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "El objeto 'apple' cumple con el esquema de manzana.",
              "fullTitle": "El objeto manzana tiene los atributos acordes con el esquema de manzana. El carro no. El objeto 'apple' cumple con el esquema de manzana.",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(apple).to.be.jsonSchema(schema, \"custom flag\");\nassert.jsonSchema(apple, schema, \"custom flag\");",
              "err": {},
              "uuid": "8ff8505c-573f-4f5c-8be9-39c2251db086",
              "parentUUID": "77e0b06d-cab5-4b6f-b7d8-ec18233ba65e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "El objeto 'car' no cumple con el esquema de manzana.",
              "fullTitle": "El objeto manzana tiene los atributos acordes con el esquema de manzana. El carro no. El objeto 'car' no cumple con el esquema de manzana.",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "expect(car).to.not.be.jsonSchema(schema, \"custom flag\");\nassert.notJsonSchema(car, schema, \"custom flag\");",
              "err": {},
              "uuid": "8dda0175-079b-4efc-821b-5f5a7a77b1c6",
              "parentUUID": "77e0b06d-cab5-4b6f-b7d8-ec18233ba65e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ff8505c-573f-4f5c-8be9-39c2251db086",
            "8dda0175-079b-4efc-821b-5f5a7a77b1c6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "0c880b71-dde4-4348-bfde-50c1af2a9af4",
          "title": "Promise testing",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\example-promises.js",
          "file": "\\test\\example-promises.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Promise resolve",
              "fullTitle": "Promise testing Promise resolve",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "return (0, _promise.promiseSumFunction)(1, -2).should.eventually.eq(3);",
              "err": {
                "message": "Error: No se pueden procesar números negativos",
                "estack": "Error: No se pueden procesar números negativos\n    at C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\/promise.js:10:20\n    at new Promise (<anonymous>)\n    at promiseSumFunction (/promise.js:8:12)\n    at Context.<anonymous> (test\\/example-promises.js:19:16)\n    at processImmediate (internal/timers.js:461:21)",
                "diff": null
              },
              "uuid": "8c980958-2ff8-4a37-9bd4-2b3e53bcb479",
              "parentUUID": "0c880b71-dde4-4348-bfde-50c1af2a9af4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Promise reject",
              "fullTitle": "Promise testing Promise reject",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _promise.promiseSumFunction)(2, -2).should.be.rejected;",
              "err": {},
              "uuid": "dcf76d08-d8fb-4c21-bc3d-5404c2fb7852",
              "parentUUID": "0c880b71-dde4-4348-bfde-50c1af2a9af4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Promise resolve with have",
              "fullTitle": "Promise testing Promise resolve with have",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _promise.promiseSumFunction2)(2, 2).then(function (resp) {\n  resp.should.have.property('result');\n});",
              "err": {},
              "uuid": "beef0010-437a-4217-9db7-cc9fb64d712f",
              "parentUUID": "0c880b71-dde4-4348-bfde-50c1af2a9af4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Promise resolve with become",
              "fullTitle": "Promise testing Promise resolve with become",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _promise.promiseSumFunction2)(1, 2).should.become(Obj);",
              "err": {},
              "uuid": "94ad772a-a73a-4d4a-92f9-0a35bd5e54cc",
              "parentUUID": "0c880b71-dde4-4348-bfde-50c1af2a9af4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Promise resolve with become",
              "fullTitle": "Promise testing Promise resolve with become",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return (0, _promise.promiseSumFunction2)(1, 2).should.become(Obj);",
              "err": {},
              "uuid": "61bb85b8-fcb5-40e6-8a65-163a8bd4962e",
              "parentUUID": "0c880b71-dde4-4348-bfde-50c1af2a9af4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Multiple promise",
              "fullTitle": "Promise testing Multiple promise",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return Promise.all([(0, _promise.promiseSumFunction)(1, 2).should.eventually.eq(3), (0, _promise.promiseSumFunction)(2, -2).should.be.rejected, (0, _promise.promiseSumFunction2)(1, 2).should.become(Obj), (0, _promise.promiseSumFunction2)(1, 2).should.become(Obj)]);",
              "err": {},
              "uuid": "0fd1d3ee-1b8c-4a71-ac4f-4c13b29f1a19",
              "parentUUID": "0c880b71-dde4-4348-bfde-50c1af2a9af4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "dcf76d08-d8fb-4c21-bc3d-5404c2fb7852",
            "beef0010-437a-4217-9db7-cc9fb64d712f",
            "94ad772a-a73a-4d4a-92f9-0a35bd5e54cc",
            "61bb85b8-fcb5-40e6-8a65-163a8bd4962e",
            "0fd1d3ee-1b8c-4a71-ac4f-4c13b29f1a19"
          ],
          "failures": [
            "8c980958-2ff8-4a37-9bd4-2b3e53bcb479"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "a7e4081c-1f71-41b8-bf63-4dbccb4df91b",
          "title": "fetchService",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\frontend-express.test.js",
          "file": "\\test\\frontend-express.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "80ecdae8-bb27-4f70-b948-57864240ee14",
              "title": "fetchService",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\frontend-express.test.js",
              "file": "\\test\\frontend-express.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchService",
                  "fullTitle": "fetchService fetchService fetchService",
                  "timedOut": false,
                  "duration": 14,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "var self = this,\n    args = arguments;\nreturn new Promise(function (resolve, reject) {\n  var gen = fn.apply(self, args);\n  function _next(value) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n  }\n  function _throw(err) {\n    asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n  }\n  _next(undefined);\n});",
                  "err": {},
                  "uuid": "cf797f5d-725c-4227-ab78-9134e05dc9e4",
                  "parentUUID": "80ecdae8-bb27-4f70-b948-57864240ee14",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "cf797f5d-725c-4227-ab78-9134e05dc9e4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 14,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        },
        {
          "uuid": "a511f22f-2538-41e9-9772-eda38f8b5799",
          "title": "fetchService",
          "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\frontend.test.js",
          "file": "\\test\\frontend.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"fetchService\"",
              "fullTitle": "fetchService \"before each\" hook in \"fetchService\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "mockServer.start(9090);",
              "err": {},
              "uuid": "6fe5dec7-d0f5-4a8b-9d1a-d58d028c3fbc",
              "parentUUID": "a511f22f-2538-41e9-9772-eda38f8b5799",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"fetchService\"",
              "fullTitle": "fetchService \"after each\" hook in \"fetchService\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return mockServer.stop();",
              "err": {},
              "uuid": "cd9d4d15-ea8e-486c-8da8-2c1418d26ae4",
              "parentUUID": "a511f22f-2538-41e9-9772-eda38f8b5799",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [],
          "suites": [
            {
              "uuid": "634e3e82-03ac-4352-a2e4-2689c48ed067",
              "title": "fetchService",
              "fullFile": "C:\\Users\\Daniel\\Documents\\Courses\\Testing\\CHAI_TEST\\test\\frontend.test.js",
              "file": "\\test\\frontend.test.js",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "fetchService",
                  "fullTitle": "fetchService fetchService fetchService",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "mockServer.get('/match').thenReply(200, {\n  message: \"Welcome to our Bookstore!\"\n}).then( /*#__PURE__*/(0, _asyncToGenerator2[\"default\"])( /*#__PURE__*/_regenerator[\"default\"].mark(function _callee() {\n  var response;\n  return _regenerator[\"default\"].wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetchService();\n        case 2:\n          response = _context.sent;\n          expect(response).to.be.equal({\n            message: \"Welcome to our Bookstore!\"\n          });\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n})))[\"catch\"](function (err) {\n  console.log('*********Error', err);\n});",
                  "err": {},
                  "uuid": "f4495c2c-63cf-4f2d-ac5d-a7774b27e599",
                  "parentUUID": "634e3e82-03ac-4352-a2e4-2689c48ed067",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "f4495c2c-63cf-4f2d-ac5d-a7774b27e599"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 3000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 3000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 3000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.4.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.2.2"
    },
    "marge": {
      "options": null,
      "version": "5.2.0"
    }
  }
}